name: golden_gate_app
description: "A new Flutter project."
publish_to: "none"
version: 1.0.0+1

environment:
  sdk: ^3.8.1

workspace:
  - packages/auth
  - packages/feature_commons
  - packages/ds_system

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter
  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.8
  firebase_core: ^4.1.0
  firebase_auth: ^6.0.2
  cloud_firestore: ^6.0.1
  auth: ^0.0.2+1
  feature_commons: ^0.0.1
  ds_system: ^0.0.1
  flutter_riverpod: ^3.0.0
  go_router: ^13.1.0
  google_sign_in: ^6.1.5
  freezed_annotation: ^3.1.0
  riverpod_annotation: ^3.0.0
  json_serializable: ^6.11.1
  melos: ^7.0.0

dev_dependencies:
  flutter_test:
    sdk: flutter
  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^6.0.0
  freezed: ^3.2.3
  build_runner: ^2.7.1
  custom_lint: ^0.8.0
  riverpod_generator: ^3.0.0
  riverpod_lint: ^3.0.0
  validators: ^3.0.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:
  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  # assets:
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/to/resolution-aware-images

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/to/asset-from-package

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/to/font-from-package

# Melos configuration
melos:
  useRootAsPackage: true
  packages:
    - "packages/*"

  versioning:
    enabled: true
    releaseType: semver
    updateGitTagRefs: true
    autoCommit: true
    autoPush: false
    changelog:
      enabled: true
      path: CHANGELOG.md
      autoGenerate: true
      autoCommit: true
      autoPush: false

  scripts:
    setup_hooks:
      description: "Configure a git hook to check if the app compiles and there are not l10n generated files uncommited before pushing"
      run: |
        echo ":hook: Configurando Git Hooks... "
        chmod +x git_hooks/pre-push
        git config core.hooksPath git_hooks
        echo ":white_check_mark: Hooks de Git configurados correctamente."
    build_runner:
      description: "Run build runner for packages that depend on build_runner"
      packageFilters:
        dependsOn: build_runner
      run: dart run build_runner build --delete-conflicting-outputs

  command:
    bootstrap:
      runPubGetInParallel: false
      usePubspecOverrides: false
      hooks:
        pre: melos run setup_hooks
        post: melos exec --order-dependents --concurrency=5 dart run build_runner build --delete-conflicting-outputs
    clean:
      hooks:
        post: melos exec --order-dependents --flutter --concurrency=1 -- "flutter clean"
# End of Melos configuration
